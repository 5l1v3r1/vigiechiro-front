form.simple-form.bs-component(novalidate='', name='xinForm', ng-submit='saveUser()')
  xin-submit
  .row
    .col-sm-6
      xin-input(ng-model='utilisateur.pseudo', placeholder='Pseudo', ng-class="{'has-error': userForm.pseudo.$invalid && !userForm.$pristine}", required='')
    .col-sm-6
      select.form-control.floating-label(placeholder='Role', ng-model='utilisateur.role', ng-disabled='!isAdmin')
        option(value='Administrateur') Administrateur
        option(value='Validateur') Validateur
        option(value='Observateur') Observateur
  .row
    .col-sm-6
      xin-input(ng-model='utilisateur.prenom', placeholder='Prénom')
    .col-sm-6
      xin-input(ng-model='utilisateur.nom', placeholder='Nom')
  .row
    .col-sm-6
      xin-email(ng-model='utilisateur.email', placeholder='Email', required='')
    .col-sm-6
  .row
    .col-sm-12
      xin-input(ng-model='utilisateur.organisation', placeholder='Organisation')
  .row
    .col-sm-6
      xin-textarea(rows='4', ng-model='utilisateur.adresse', placeholder='Adresse')
    .col-sm-6
      xin-textarea(rows='4', ng-model='utilisateur.commentaire', placeholder='Commentaire')
  .row
    .col-sm-6
      label
        xin-checkbox(ng-model='utilisateur.professionnel')
        |         Je participe à titre professionnel
    .col-sm-6
      label
        xin-checkbox(ng-model='utilisateur.donnees_publiques')
        |         J'accepte que mes observations soit publiées sous license publique
  script.
    $.material.options.autofill = true;
    $.material.init();


